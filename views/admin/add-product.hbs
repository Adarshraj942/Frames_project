<section>
    <div class="container mt-4">
        <div class="row">
            <div class="col-md-6">
                <h2 class="text-center">Add Product</h2>
                <form action="/admin/add-product" method="POST" id="form" enctype="multipart/form-data">
                    <label for="">Name</label>
                    <input type="text" name="Name" id="proName" class="form-control">
                    <div>
                         <span id="error"  style="color: red;"></span>
                    </div>
                   
                    <label for="">Category</label>
                    {{!-- <input type="text" name="Category" class="form-control"> --}}
             
                    <select name="category" class="form-select" aria-label="Default select example">
                    {{!-- <option selected>Open this select menu</option> --}}
                    <option value="">select</option>
                     {{#each category}}
                     <option value="{{this.Name}}">{{this.Name}}</option>
                    {{/each}}
                        </select>
                      
                    <label for="">Price</label>
                    <input type="text" name="Price" id="proPrice" class="form-control">
                    <div>
                        <span style="color: red;" id="error2"></span>
                    </div>

                        <label for="">Quantity</label>
                    <input type="text" name="Price" id="proQuantity" class="form-control">
                    <div>
                        <span style="color: red;" id="error2"></span>
                    </div>

                    <label for="">Description</label>
                    <textarea type="text" name="Description" id="proDis" class="form-control"></textarea>
                       <div>
                           <span style="color: red;" id="error3"></span>
                       </div>
                    <label for="">Image</label>
                    {{!-- <input type="file" name="Image" id="file-input" accept="image/*" class="form-control"> --}}
                 <div class="mb-3  col-lg-3 mt-4">
                    <img src="" id="imgView1" alt="" style="width:100px">
            <input type="file" id="id_image1" name="Image" accept="image/*" onchange="viewImage1(event)"><br>
            <div class="vald-info" id="info"></div>
            <h5 class="error_form text-danger" id="image1_error_message"></h5>
            <div id="image-box1" class="image-container" style="width:30vw"  ></div>
            <button class="btn btn-outline-info" id="crop-btn1" style="width: 100%; margin-top: 10px; display: none;"
              type="button">Crop</button>
                </div>


                    <div class="mb-3  col-lg-3 mt-4">
                    <img src="" id="imgView1" alt="" style="width:100px">
            <input type="file" id="id_image1" name="Image2" accept="image/*" onchange="viewImage1(event)"><br>
            <div class="vald-info" id="info"></div>
            <h5 class="error_form text-danger" id="image1_error_message"></h5>
            <div id="image-box1" class="image-container" style="width:30vw"  ></div>
            <button class="btn btn-outline-info" id="crop-btn1" style="width: 100%; margin-top: 10px; display: none;"
              type="button">Crop</button>
                </div>


                    <div class="mb-3  col-lg-3 mt-4">
                    <img src="" id="imgView1" alt="" style="width:100px">
            <input type="file" id="id_image1" name="Image3" accept="image/*" onchange="viewImage1(event)"><br>
            <div class="vald-info" id="info"></div>
            <h5 class="error_form text-danger" id="image1_error_message"></h5>
            <div id="image-box1" class="image-container" style="width:30vw"  ></div>
            <button class="btn btn-outline-info" id="crop-btn1" style="width: 100%; margin-top: 10px; display: none;"
              type="button">Crop</button>
                </div>


                    <div class="mb-3  col-lg-3 mt-4">
                    <img src="" id="imgView1" alt="" style="width:100px">
            <input type="file" id="id_image1" name="Image4" accept="image/*" onchange="viewImage1(event)"><br>
            <div class="vald-info" id="info"></div>
            <h5 class="error_form text-danger" id="image1_error_message"></h5>
            <div id="image-box1" class="image-container" style="width:30vw"  ></div>
            <button class="btn btn-outline-info" id="crop-btn1" style="width: 100%; margin-top: 10px; display: none;"
              type="button">Crop</button>
                </div>


     

                

                    <button type="submit" class="btn btn-success mt-4">Submit</button>
                </form>
            </div>
        </div>
    </div>
</section>
{{!-- 
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/0.8.1/cropper.min.js"></script>
  --}}
<script>
   
    const form=document.getElementById("form")
   

    form.addEventListener('submit',(e)=>{
               var error=[]
               var errorPrice=[]
               var errorDis=[]
              var proName=document.getElementById("proName")

              if(proName.value==''){
                  e.preventDefault()
                  error.push('please enter name')
              }
                 var patterns = /^[0-9]+$/;
                 
              if( proPrice.value.match(patterns)){
                 // e.preventDefault()
                 
              }
              else{
                  e.preventDefault()
                  errorPrice.push('enter valid price')
              }

                  if(proDis.value==''){
                  e.preventDefault()
                  errorDis.push("please enter Discription")
              }
            

              

              var error1=document.getElementById("error")
              var error2=document.getElementById("error2")
              var error3=document.getElementById("error3")
              if(error.length>0){
                 error1.innerText=error.join(' , ')
              }

              if(errorPrice.length>0){
                  error2.innerText=errorPrice.join(' , ')
              }

              if(errorDis.length>0){
                 error3.innerText=error.join(' , ')
              }
              
          
    }
    )

     const imagebox1 = document.getElementById('image-box1')
  const crop_btn1 = document.getElementById('crop-btn1')
  const input1 = document.getElementById('id_image1')
   function viewImage1(event){
     

var fileInput = document.getElementById('id_image1');

var filePath = fileInput.value;
var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
if (!allowedExtensions.exec(filePath)) {
  fileInput.value = '';
  swal("There is a problem!", "Please choose image file.");
  return false;
}else{
        document.getElementById('imgView1').src=URL.createObjectURL(event.target.files[0])

}
        
    }

    
  // When user uploads the image this event will get triggered
  input1.addEventListener('change', () => {
    // Getting image file object from the input variable
    const img_data1 = input1.files[0]
    // createObjectURL() static method creates a DOMString containing a URL representing the object given in the parameter.
    // The new object URL represents the specified File object or Blob object.
    const url1 = URL.createObjectURL(img_data1)
    // Creating a image tag inside imagebox which will hold the cropping view image(uploaded file) to it using the url created before.
    imagebox1.innerHTML = `<img src="${url1}" id="image1" style="width:100%;">`
    // Storing that cropping view image in a variable
    const image1 = document.getElementById('image1')
    
    // Displaying the image box
    document.getElementById('image-box1').style.display = 'block'
    // Displaying the Crop buttton
    document.getElementById('crop-btn1').style.display = 'block'
    // Hiding the Post button
    const cropper1 = new Cropper(image1, {
      autoCropArea: 1,
      viewMode: 1,
      scalable: false,
      zoomable: false,
      movable: false,
      minCropBoxWidth: 50,
      minCropBoxHeight: 50,
    })
    // When crop button is clicked this event will get triggered
    crop_btn1.addEventListener('click', () => {
      // This method coverts the selected cropped image on the cropper canvas into a blob object
      cropper1.getCroppedCanvas().toBlob((blob) => {
        // Gets the original image data
        let fileInputElement1 = document.getElementById('id_image1');
        // Make a new cropped image file using that blob object, image_data.name will make the new file name same as original image
        let file1 = new File([blob], img_data1.name, { type: "image/*", lastModified: new Date().getTime() });
        // Create a new container
        let container1 = new DataTransfer();
        // Add the cropped image file to the container
        container1.items.add(file1);
        // Replace the original image file with the new cropped image file
        fileInputElement1.files = container1.files;
        document.getElementById('imgView1').src= URL.createObjectURL(fileInputElement1.files[0])
        // Hide the cropper box
        document.getElementById('image-box1').style.display = 'none'
        // Hide the crop button
        document.getElementById('crop-btn1').style.display = 'none'
      })
    })
  })

  
 
 

      
      
</script>